{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Abb 2: Schön, dich kennenzulernen\n",
    "\n",
    "Das letzte Mal haben Sie ein Programm geschrieben/gesehen, das Sie persönlich begrüssen kann:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print(\"Bitte gib deinen Namen ein:\")\n",
    "my_name = input ()\n",
    "print(\"Schön, dich kennenzulernen, \" + my_name)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Dieses Programm wollen wir nun Zeile für Zeile analysieren, damit wir es anschliessend ausbauen können.\n",
    "1. `print(\"Bitte gib deinen Namen ein:\")`-> Diese Zeile \"printed\" den Text zwischen den Anführungszeichen aus.\n",
    "1. `my_name = input ()` -> input() zeigt dem Benutzer/der Benutzerin eine Textbox an, in die Text eingegeben werden kann. Diesen Text speichern wir unter dem Namen `my_name` ab.\n",
    "1. `print(\"Schön, dich kennenzulernen, \" + my_name)` -> Hier fügen wir den Text \"Schön, dich kennenzulernen\" und den zuvor eingegebenen Namen (der unter `my_name` abgespeichert ist) zu einem Text zusammen und \"printen\" diesen auf den Bildschirm\n",
    "\n",
    "Wenn wir unser Programm nun dazu bringen möchten, uns besser kennenzulernen, können wir ihm mehr Fragen beibringen. Wir können das Programm dazu erweitern, indem wir den Code mit einigen anpassungen wiederholen. Beispielsweise möchte ich, dass mein Programm nach dem Lieblingsessen fragt. Ich kopiere darum Zeile 1 einmal unten an das Programm und modifiziere den Text: `print(\"Was ist dein Lieblingsessen?\")`\n",
    "Dann möchte ich dem Benutzer/der Benutzerin die Möglichkeit geben, eine Antwort einzugeben: `my_food = input()`\n",
    "Zum Schluss soll das Programm zeigen, was es nun weiss: `print(\"So, \" + my_name + \", dein Lieblingsessen ist also \" + my_food)`\n",
    "Vollständig sieht das Programm nun so aus:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Bitte gib deinen Namen ein:\n",
      "Philip\n",
      "Schön, dich kennenzulernen, Philip\n",
      "Was ist dein Lieblingsessen?\n",
      "Ravioli\n",
      "So, Philip, dein Lieblingsessen ist also Ravioli\n"
     ]
    }
   ],
   "source": [
    "print(\"Bitte gib deinen Namen ein:\")\n",
    "my_name = input ()\n",
    "print(\"Schön, dich kennenzulernen, \" + my_name)\n",
    "print(\"Was ist dein Lieblingsessen?\")\n",
    "my_food = input()\n",
    "print(\"So, \" + my_name + \", dein Lieblingsessen ist also \" + my_food)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Aufgabe 1\n",
    "Probieren Sie nun, das obenstehende Programm durch weitere Fragen zu erweitern. Gehen Sie jeweils nach dem gleichen Schema vor und geben Sie auf die Anführungs-/Schlusszeichen acht!\n",
    "Versuchen Sie auch mal, das Gelernte aus drei Fragen zusammenzufassen. Bspw. \"Also, Philip, es war nett dich kennenzulernen. Ich weiss jetzt, dass du in Zürich wohnst und gerne Ravioli isst.\" <- Hierbei sind die Worte \"Philip\", \"Zürich\" und \"Ravioli\" vom Benutzer eingegeben worden.\n",
    "\n",
    "### Aufgabe 2\n",
    "In diesem Programm haben wir nun zwei Dinge benutzt, die wir genauer betrachte möchten:\n",
    "1. Strings: Eine Zeichenkette (= Aneinanderreihung von Zahlen, Buchstaben und Sonderzeichen), die wir eingeben, ausgeben oder verarbeiten, heisst \"String\". Strings werden in Python zwischen Anführungs- und Schlusszeichen (\"\") geschrieben.\n",
    "1. Variabeln: Variabeln kennen Sie schon aus der Mathematik. Eine Variable ist ein Name bzw. ein Platzhalter für einen bestimmten Wert. Bspw. hat es in der Gleichung $ y = x + 1 $ zwei Variabeln, x und y. Beide können verschiedene Werte annehmen. Genauso ist es beim Programmieren auch: `my_name` oder `my_food` sind Variabeln. In Variabeln können wir Werte zwischenspeichern und später wiederverwenden. In einer Variable können wir alles mögliche speichern: Zahlen, Strings, uvm.\n",
    "\n",
    "Finden Sie einen Lernpartner/eine Lernpartnerin. Tauschen Sie die Plätze und schauen Sie sich das Programm des jeweils anderen an. Identifizieren Sie alle Strings und Variablen, die Sie finden."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
